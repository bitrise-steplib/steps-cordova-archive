format_version: "12"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 2.0.0
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-cordova-with-karma-jasmine.git
    - SAMPLE_APP_BRANCH: master
    before_run:
    - audit-this-step
    steps:
    - go-list: {}
    - golint: {}
    - errcheck: {}
    - go-test: {}
    after_run:
    - test-with-npm
    - test-with-yarn
    - test-with-prepare-step

  test-with-npm:
    envs:
    - RUN_PREPARE_STEP: "false"
    - RUN_PREPARE_IN_ARCHIVE: "true"
    - USE_YARN: "false"
    after_run:
    - _common

  test-with-yarn:
    envs:
    - RUN_PREPARE_STEP: "false"
    - RUN_PREPARE_IN_ARCHIVE: "true"
    - USE_YARN: "true"
    after_run:
    - _common

  test-with-prepare-step:
    envs:
    - RUN_PREPARE_STEP: "true"
    - RUN_PREPARE_IN_ARCHIVE: "false"
    - USE_YARN: "false"
    after_run:
    - _common

  _common:
    steps:
    - set-java-version:
        inputs:
        - set_java_version: 8
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -v
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to ./_tmp dir
        run_if: "true"
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: git clone --single-branch -b "${SAMPLE_APP_BRANCH}" "${SAMPLE_APP_URL}" .
    - script:
        run_if: '{{enveq "USE_YARN" "true"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # Yarn warns if package-lock.json exists, node_modules could be created by npm
            rm package-lock.json; rm -rf ./node_modules
    - script:
        # Needed to test cordova prepare
        inputs:
        - content: |-
            rm -rf ./platforms
            cordova platform rm ios
            cordova platform add ios
            cordova platform remove android
            cordova platform add android@8.X.X

            envman unset --key ANDROID_NDK_HOME
    - yarn:
        run_if: '{{enveq "USE_YARN" "true"}}'
        inputs:
        - command: install
    - cordova-prepare:
        title: Cordova prepare
        run_if: '{{enveq "RUN_PREPARE_STEP" "true"}}'
        inputs: []
    - path::./:
        title: Cordova archive
        inputs:
        - target: emulator
        # - cordova_version: latest
        - run_cordova_prepare: ${RUN_PREPARE_IN_ARCHIVE}
    - script:
        title: Output test
        inputs:
        - content: |
            #!/usr/bin/env bash
            if [[ ! -e "$BITRISE_DSYM_DIR_PATH" ]]; then
                echo "Does not exist: dSYM dir's path"
                exit 1
            elif [[ ! -e "$BITRISE_DSYM_PATH" ]]; then
                echo "Does not exist: dSYM.zip file's path"
                exit 1
            elif [[ ! -e "$BITRISE_APP_DIR_PATH" ]]; then
                echo "Does not exist: app dir's path"
                exit 1
            elif [[ ! -e "$BITRISE_APP_PATH" ]]; then
                echo "Does not exist: app.zip file's path"
                exit 1
            elif [[ ! -e "$BITRISE_APK_PATH" ]]; then
                echo "Does not exist: apk file's path"
                exit 1
            fi
    - path::./:
        title: Cordova archive android bundle
        inputs:
        - platform: android
        - android_app_type: aab
        - target: emulator
        - cordova_version:
        - run_cordova_prepare: ${RUN_PREPARE_IN_ARCHIVE}
    - script:
        title: Output test
        inputs:
        - content: |
            #!/usr/bin/env bash
            if [[ ! -e "$BITRISE_AAB_PATH" ]]; then
                echo "Does not exist: aab file's path"
                exit 1
            fi
    - change-workdir:
        title: Change back to original working directory
        inputs:
        - path: ${ORIG_BITRISE_SOURCE_DIR}

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
