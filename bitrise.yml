format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 1.2.1
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - test-with-npm
    - test-with-yarn

  test-with-npm:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-cordova-with-karma-jasmine.git
    - SAMPLE_APP_BRANCH: master
    - ADD_PLATFORMS: "true"
    - USE_YARN: "false"
    after_run:
    - _common

  test-with-npm-no-platform-add:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-cordova-with-karma-jasmine.git
    - SAMPLE_APP_BRANCH: master
    - ADD_PLATFORMS: "false"
    - USE_YARN: "false"
    after_run:
    - _common

  test-with-yarn:
    envs:
    - SAMPLE_APP_URL: https://github.com/lpusok/sample-apps-cordova-with-karma-jasmine.git/
    - SAMPLE_APP_BRANCH: master
    - ADD_PLATFORMS: "true"
    - USE_YARN: "true"
    after_run:
    - _common

  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -v
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to ./_tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: git clone --single-branch -b "${SAMPLE_APP_BRANCH}" "${SAMPLE_APP_URL}" .
    - script:
        run_if: '{{enveq "USE_YARN" "true"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # Yarn warns if package-lock.json exists, node_modules could be created by npm
            rm package-lock.json; rm -rf ./node_modules
    - yarn:
        run_if: '{{enveq "USE_YARN" "true"}}'
        inputs:
        - command: install
    - path::./:
        title: Step Test
        inputs:
        - options: --buildFlag="-UseModernBuildSystem=0"
        - target: emulator
        - cordova_version: latest
        - readd_platform: ${ADD_PLATFORMS}
        - add_platform: ${ADD_PLATFORMS}
    - script:
        title: Output test
        inputs:
        - content: |
            #!/usr/bin/env bash
            if [[ ! -e "$BITRISE_DSYM_DIR_PATH" ]]; then
                echo "Does not exist: dSYM dir's path"
                exit 1
            elif [[ ! -e "$BITRISE_DSYM_PATH" ]]; then
                echo "Does not exist: dSYM.zip file's path"
                exit 1
            elif [[ ! -e "$BITRISE_APP_DIR_PATH" ]]; then
                echo "Does not exist: app dir's path"
                exit 1
            elif [[ ! -e "$BITRISE_APP_PATH" ]]; then
                echo "Does not exist: app.zip file's path"
                exit 1
            elif [[ ! -e "$BITRISE_APK_PATH" ]]; then
                echo "Does not exist: apk file's path"
                exit 1
            fi
    - change-workdir:
        title: Change back to original working directory
        inputs:
        - path: ${ORIG_BITRISE_SOURCE_DIR}

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
